
table name: db_demo
--good luck


CREATE TABLE COIN
(
  ID NUMBER NOT NULL,
  NAME VARCHAR(4000),
  SYMBOL VARCHAR(4000),
  CATEGORY VARCHAR(4000),
  LOGO VARCHAR(4000),
  WEBSITE VARCHAR(4000),
  EXPLORER VARCHAR(4000),
  DESCRIPTION VARCHAR(4000),
  DATE_ADDED TIMESTAMP
)
ALTER TABLE COIN ADD (
  CONSTRAINT coin_pk PRIMARY KEY (ID));


CREATE TABLE DETAIL
(
  ID NUMBER NOT NULL,
  ID_COIN NUMBER,
  CMC_RANK NUMBER,
  NUM_MARKET_PAIRS VARCHAR(40),
  CIRCULATING_SUPPLY VARCHAR(40),
  TOTAL_SUPPLY VARCHAR(40),
  MAX_SUPPLY VARCHAR(40),
  LAST_UPDATED TIMESTAMP
)

CREATE TABLE QUOTE
(
  ID NUMBER NOT NULL,
  ID_COIN NUMBER,
  TYPE VARCHAR(40),
  PRICE VARCHAR(40),
  VOLUME_24H VARCHAR(40),
  PERCENT_CHANGE_1H VARCHAR(40),
  PERCENT_CHANGE_24H VARCHAR(40),
  PERCENT_CHANGE_7D VARCHAR(40),
  MARKET_CAP VARCHAR(40),
  LAST_UPDATED TIMESTAMP
)

ALTER TABLE DETAIL ADD (
  CONSTRAINT coif_pk PRIMARY KEY (ID));

-- tao sequence de tang tu dong cho cot id
CREATE SEQUENCE det_seq START WITH 1;

CREATE OR REPLACE TRIGGER det_bir 
BEFORE INSERT ON DETAIL 
FOR EACH ROW

BEGIN
  SELECT det_seq.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;
/

ALTER TABLE QUOTE ADD (
  CONSTRAINT quo_pk PRIMARY KEY (ID));

-- tao sequence de tang tu dong cho cot id
CREATE SEQUENCE quo_seq START WITH 1;

CREATE OR REPLACE TRIGGER quo_bir 
BEFORE INSERT ON QUOTE 
FOR EACH ROW

BEGIN
  SELECT quo_seq.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;
/